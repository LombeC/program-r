console:
  bot:  bot
  prompt: ">>>"
  license_keys: $BOT_ROOT/config/license.keys
  scheduler:
    name: Scheduler1
    debug_level: 0
    add_listeners: False
    remove_all_jobs: False

majordomo:
  bot: bot
  ip: "tcp://localhost"
  port: 5456
  service_name: "programr"
  verbose: false

socket:
  host: 127.0.0.1
  port: 9999
  queue: 5
  max_buffer: 1024
  debug: true


rest:
  host: 0.0.0.0
  port: 5000
  use_api_keys: false

bot:
    brain: brain

    license_keys: $BOT_ROOT/config/license.keys
    prompt: ">>>"
    initial_question: Hi, how can I help you today?
    default_response: Sorry, I don't have an answer for that!
    rephrase_sentences_file: $BOT_ROOT/system/rephrase.txt
    empty_string: YEMPTY
    exit_response: So long, and thanks for the fish!
    override_properties: true
    emotive: true

    max_question_recursion: 1000
    max_question_timeout: 60
    max_search_depth: 100
    max_search_timeout: 60

    spelling:
      classname: programr.spelling.norvig.NorvigSpellingChecker
      corpus: $BOT_ROOT/spelling/corpus.txt
      check_before: false
      check_and_retry: false

    conversations:
      max_histories: 100
      initial_topic: "*"
      restore_last_topic: false
      type: "mongodb"
      config_name: database_config
      empty_on_start: false

    session:
      session_saving_mode: false
      session_saving_dir: $BOT_ROOT/session_data

    #this is for file configuration
    file_config:
      dir: $BOT_ROOT/results

    #this is for mongodb configuration
    database_config:
      host: "localhost"
      port: 27017
      password: "password"
      root: "/home/rohola/mongodbtest-data"
      name: "programr"
      collection_name: "conversations"

brain:

    # Overrides
    overrides:
      allow_system_aiml: true
      allow_learn_aiml: true
      allow_learnf_aiml: true

    # Defaults
    defaults:
      default-get: unknown
      default-property: unknown
      default-map: unknown
      learn-filename: learnf_tutorial.aiml

    # Nodes
    nodes:
      pattern_nodes: $BOT_ROOT/config/pattern_nodes.conf
      template_nodes: $BOT_ROOT/config/template_nodes.conf

    # Dynamics
    dynamic:
      variables:
          gettime: programr.dynamic.variables.datetime.GetTime
          getsentiment: programr.dynamic.variables.sentiment_analysis.GetSentiment

    # Binary
    #because we added tensorflow it can't save binary anymore
    binaries:
      save_binary: false
      load_binary: false
      binary_filename: /tmp/tutorial.brain
      load_aiml_on_binary_fail: false

    # Braintree
    braintree:
      file: /tmp/braintree.xml
      content: xml

    files:
        aiml:
            files: $BOT_ROOT/aiml
            extension: .aiml
            directories: true
            errors: /tmp/alice2_errors.txt
            #duplicates: /tmp/alice2_duplicates.txt
            conversation: /tmp/y-bot-conversation.csv
              #type: file
#              file: /tmp/y-bot-conversation.csv
#              format: csv
#              delete_on_start: true

        sets:
            files: $BOT_ROOT/sets
            extension: .txt
            directories: false
        maps:
            files: $BOT_ROOT/maps
            extension: .txt
            directories: false
        denormal: $BOT_ROOT/config/denormal.txt
        normal: $BOT_ROOT/config/normal.txt
        gender: $BOT_ROOT/config/gender.txt
        person: $BOT_ROOT/config/person.txt
        person2: $BOT_ROOT/config/person2.txt
        properties: $BOT_ROOT/config/properties.txt
        triples: $BOT_ROOT/config/triples.txt
        preprocessors: $BOT_ROOT/config/preprocessors.conf
        postprocessors: $BOT_ROOT/config/postprocessors.conf

    services:
        # REST:
        #     classname: programr.services.rest.GenericRESTService
        #     method: GET
        #     host: 0.0.0.0
        # Pannous:
        #     classname: programr.services.pannous.PannousService
        #     url: http://weannie.pannous.com/api
        # Pandora:
        #     classname: programr.services.pandora.PandoraService
        #     url: http://www.pandorabots.com/pandora/talk-xml
        Wikipedia:
            classname: programr.services.wikipediaservice.WikipediaService

        # Mitsuku:
        #     classname: programr.services.mitsuku.MitsukuService
        #     username: epr_finman@yahoo.com
        #     password: $BOT_ROOT/password.txt

        # Chomsky:
        #     classname: programr.services.chomsky.ChomskyService
        #     url: http://demo.vhost.pandorabots.com/pandora/talk?botid=b0dafd24ee35a477


    oob:
      default:
        classname: programr.oob.default.DefaultOutOfBandProcessor
      robot:
        classname: programr.oob.robot.RobotOutOfBandProcessor
      alarm:
        classname: programr.oob.alarm.AlarmOutOfBandProcessor
      camera:
        classname: programr.oob.camera.CameraOutOfBandProcessor
      clear:
        classname: programr.oob.clear.ClearOutOfBandProcessor
      dial:
        classname: programr.oob.dial.DialOutOfBandProcessor
      dialog:
        classname: programr.oob.dialog.DialogOutOfBandProcessor
      email:
        classname: programr.oob.email.EmailOutOfBandProcessor
      geomap:
        classname: programr.oob.map.MapOutOfBandProcessor
      schedule:
        classname: programr.oob.schedule.ScheduleOutOfBandProcessor
      search:
        classname: programr.oob.search.SearchOutOfBandProcessor
      sms:
        classname: programr.oob.sms.SMSOutOfBandProcessor
      url:
        classname: programr.oob.url.URLOutOfBandProcessor
      wifi:
        classname: programr.oob.wifi.WifiOutOfBandProcessor

    nlp:
      classname: programr.nlp.nlp.NLP

      nltk_data_dir: /home/rohola/Codes/Python/program-r/libs/nltk_data

      sentiment_analysis:
        method: distilbert
        # method: corenlp
        alpha: 0.1
        positive_threshold: 0.2
        negative_threshold: -0.2
        model_dir: ./libs/pretrain_distilbert_full_sentiment

      tokenizer:
        libname: nltk
        split_chars: .
      #embedding
      sentence_segmentation:
        libname: nltk

      #embedding
      semantic_similarity:
        method: "distilRoberta"
        model_dir: ./libs/pretrain_distilroberta
